{
  "Description": "Root Stack for AWS Amplify CLI",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "DeploymentBucketName": {
      "Type": "String",
      "Default": "DeploymentBucket",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    },
    "AuthRoleName": {
      "Type": "String",
      "Default": "AuthRoleName",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    },
    "UnauthRoleName": {
      "Type": "String",
      "Default": "UnAuthRoleName",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    }
  },
  "Outputs": {
    "Region": {
      "Description": "CloudFormation provider root stack Region",
      "Value": {
        "Ref": "AWS::Region"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Region"
        }
      }
    },
    "StackName": {
      "Description": "CloudFormation provider root stack ID",
      "Value": {
        "Ref": "AWS::StackName"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-StackName"
        }
      }
    },
    "StackId": {
      "Description": "CloudFormation provider root stack name",
      "Value": {
        "Ref": "AWS::StackId"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-StackId"
        }
      }
    },
    "AuthRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "AuthRole",
          "Arn"
        ]
      }
    },
    "UnauthRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "UnauthRole",
          "Arn"
        ]
      }
    },
    "DeploymentBucketName": {
      "Description": "CloudFormation provider root stack deployment bucket name",
      "Value": {
        "Ref": "DeploymentBucketName"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DeploymentBucketName"
        }
      }
    },
    "AuthRoleName": {
      "Value": {
        "Ref": "AuthRole"
      }
    },
    "UnauthRoleName": {
      "Value": {
        "Ref": "UnauthRole"
      }
    }
  },
  "Resources": {
    "DeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "DeploymentBucketName"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "AuthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity"
            }
          ]
        },
        "RoleName": {
          "Ref": "AuthRoleName"
        }
      }
    },
    "UnauthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity"
            }
          ]
        },
        "RoleName": {
          "Ref": "UnauthRoleName"
        }
      }
    },
    "hostingamplifyhosting": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/hosting/amplifyhosting-template.json",
        "Parameters": {
          "appId": "d2bo2woks3a1xn",
          "type": "manual",
          "env": "dev"
        }
      }
    },
    "customcustomResource291b215b": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/custom/customResource291b215b-cloudformation-template.yaml",
        "Parameters": {
          "env": "dev"
        }
      }
    },
    "functioncameraLambda": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/cameraLambda-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/cameraLambda-6e614b42485a58766171-build.zip",
          "env": "dev"
        }
      }
    },
    "functionamplifyppetest140e0b5b3": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/amplifyppetest140e0b5b3-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/amplifyppetest140e0b5b3-41397a50616c4f7a3541-build.zip",
          "env": "dev"
        }
      }
    },
    "functiondeviceLambda": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/deviceLambda-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/deviceLambda-664748572b77304e564d-build.zip",
          "env": "dev"
        }
      }
    },
    "functioninvokeStep": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/invokeStep-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/invokeStep-4a5152695056424e6c4d-build.zip",
          "env": "dev"
        }
      }
    },
    "functioncreateTrainingJob": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/createTrainingJob-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/createTrainingJob-5078484a533873732f68-build.zip",
          "env": "dev"
        }
      }
    },
    "functioncheckTrainingJobStatus": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/checkTrainingJobStatus-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/checkTrainingJobStatus-6d566973447157475142-build.zip",
          "env": "dev"
        }
      }
    },
    "functionppaUploadMetricsToS3": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/ppaUploadMetricsToS3-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/ppaUploadMetricsToS3-774242444a3878683272-build.zip",
          "env": "dev"
        }
      }
    },
    "functiontriggerCodeBuild": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/triggerCodeBuild-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/triggerCodeBuild-5a542f61416450343168-build.zip",
          "env": "dev"
        }
      }
    },
    "functionlistModel": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/listModel-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/listModel-6a726974334e4d566141-build.zip",
          "env": "dev"
        }
      }
    },
    "functionppaDeployment": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/ppaDeployment-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/ppaDeployment-44436273564a76616153-build.zip",
          "env": "dev"
        }
      }
    },
    "functionlistEvent": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/listEvent-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/listEvent-47533057537069495669-build.zip",
          "env": "dev"
        }
      }
    },
    "functionVerifyEvent": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/VerifyEvent-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/VerifyEvent-4e766d4f3948467a7872-build.zip",
          "env": "dev"
        }
      }
    },
    "functionExportEvent": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/function/ExportEvent-cloudformation-template.json",
        "Parameters": {
          "deploymentBucketName": "amplify-amplifyppetest1-dev-214902-deployment",
          "s3Key": "amplify-builds/ExportEvent-44503575544d41586b50-build.zip",
          "env": "dev"
        }
      }
    },
    "authamplifyppetest1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/auth/amplifyppetest1-cloudformation-template.json",
        "Parameters": {
          "identityPoolName": "amplifyppetest1_identitypool_6292e455",
          "allowUnauthenticatedIdentities": true,
          "resourceNameTruncated": "amplif6292e455",
          "userPoolName": "amplifyppetest1_userpool_6292e455",
          "autoVerifiedAttributes": "email",
          "mfaConfiguration": "OFF",
          "mfaTypes": "SMS Text Message",
          "smsAuthenticationMessage": "Your authentication code is {####}",
          "smsVerificationMessage": "Your verification code is {####}",
          "emailVerificationSubject": "Your verification code",
          "emailVerificationMessage": "Your verification code is {####}",
          "defaultPasswordPolicy": false,
          "passwordPolicyMinLength": 8,
          "passwordPolicyCharacters": "",
          "requiredAttributes": "email",
          "aliasAttributes": "",
          "userpoolClientGenerateSecret": false,
          "userpoolClientRefreshTokenValidity": 30,
          "userpoolClientWriteAttributes": "email",
          "userpoolClientReadAttributes": "email",
          "userpoolClientLambdaRole": "amplif6292e455_userpoolclient_lambda_role",
          "userpoolClientSetAttributes": false,
          "authSelections": "identityPoolAndUserPool",
          "resourceName": "amplifyppetest1",
          "sharedId": "6292e455",
          "serviceName": "Cognito",
          "useDefault": "manual",
          "authRoleArn": {
            "Fn::GetAtt": [
              "AuthRole",
              "Arn"
            ]
          },
          "unauthRoleArn": {
            "Fn::GetAtt": [
              "UnauthRole",
              "Arn"
            ]
          },
          "breakCircularDependency": true,
          "useEnabledMfas": true,
          "dependsOn": "",
          "env": "dev"
        }
      }
    },
    "apibackend": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/api/backend-cloudformation-template.json",
        "Parameters": {
          "functioncameraLambdaName": {
            "Fn::GetAtt": [
              "functioncameraLambda",
              "Outputs.Name"
            ]
          },
          "functioncameraLambdaArn": {
            "Fn::GetAtt": [
              "functioncameraLambda",
              "Outputs.Arn"
            ]
          },
          "functiondeviceLambdaName": {
            "Fn::GetAtt": [
              "functiondeviceLambda",
              "Outputs.Name"
            ]
          },
          "functiondeviceLambdaArn": {
            "Fn::GetAtt": [
              "functiondeviceLambda",
              "Outputs.Arn"
            ]
          },
          "functioninvokeStepName": {
            "Fn::GetAtt": [
              "functioninvokeStep",
              "Outputs.Name"
            ]
          },
          "functioninvokeStepArn": {
            "Fn::GetAtt": [
              "functioninvokeStep",
              "Outputs.Arn"
            ]
          },
          "functionppaDeploymentName": {
            "Fn::GetAtt": [
              "functionppaDeployment",
              "Outputs.Name"
            ]
          },
          "functionppaDeploymentArn": {
            "Fn::GetAtt": [
              "functionppaDeployment",
              "Outputs.Arn"
            ]
          },
          "functionlistModelName": {
            "Fn::GetAtt": [
              "functionlistModel",
              "Outputs.Name"
            ]
          },
          "functionlistModelArn": {
            "Fn::GetAtt": [
              "functionlistModel",
              "Outputs.Arn"
            ]
          },
          "functionlistEventName": {
            "Fn::GetAtt": [
              "functionlistEvent",
              "Outputs.Name"
            ]
          },
          "functionlistEventArn": {
            "Fn::GetAtt": [
              "functionlistEvent",
              "Outputs.Arn"
            ]
          },
          "functionVerifyEventName": {
            "Fn::GetAtt": [
              "functionVerifyEvent",
              "Outputs.Name"
            ]
          },
          "functionVerifyEventArn": {
            "Fn::GetAtt": [
              "functionVerifyEvent",
              "Outputs.Arn"
            ]
          },
          "functionExportEventName": {
            "Fn::GetAtt": [
              "functionExportEvent",
              "Outputs.Name"
            ]
          },
          "functionExportEventArn": {
            "Fn::GetAtt": [
              "functionExportEvent",
              "Outputs.Arn"
            ]
          },
          "env": "dev"
        }
      }
    },
    "apiapie2a152f1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/api/apie2a152f1-cloudformation-template.json",
        "Parameters": {
          "functionamplifyppetest140e0b5b3Name": {
            "Fn::GetAtt": [
              "functionamplifyppetest140e0b5b3",
              "Outputs.Name"
            ]
          },
          "functionamplifyppetest140e0b5b3Arn": {
            "Fn::GetAtt": [
              "functionamplifyppetest140e0b5b3",
              "Outputs.Arn"
            ]
          },
          "env": "dev"
        }
      }
    },
    "storageCamera": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/storage/Camera-cloudformation-template.json",
        "Parameters": {
          "tableName": "Camera",
          "partitionKeyName": "camera_id",
          "partitionKeyType": "S",
          "env": "dev"
        }
      }
    },
    "storageDevice": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/storage/Device-cloudformation-template.json",
        "Parameters": {
          "tableName": "Device",
          "partitionKeyName": "device_id",
          "partitionKeyType": "S",
          "env": "dev"
        }
      }
    },
    "storageppaModel": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/storage/ppaModel-cloudformation-template.json",
        "Parameters": {
          "tableName": "ppaModel",
          "partitionKeyName": "model_name",
          "partitionKeyType": "S",
          "env": "dev"
        }
      }
    },
    "storageDeployment": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/storage/Deployment-cloudformation-template.json",
        "Parameters": {
          "tableName": "Deployment",
          "partitionKeyName": "DeploymentID",
          "partitionKeyType": "S",
          "env": "dev"
        }
      }
    },
    "storageEvent": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifyppetest1-dev-214902-deployment/amplify-cfn-templates/storage/Event-cloudformation-template.json",
        "Parameters": {
          "tableName": "Event",
          "partitionKeyName": "CameraID",
          "partitionKeyType": "S",
          "sortKeyName": "TimeStamp",
          "sortKeyType": "N",
          "env": "dev"
        }
      }
    },
    "UpdateRolesWithIDPFunction": {
      "DependsOn": [
        "AuthRole",
        "UnauthRole",
        "authamplifyppetest1"
      ],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "const response = require('cfn-response');",
                "const aws = require('aws-sdk');",
                "let responseData = {};",
                "exports.handler = function(event, context) {",
                "  try {",
                "    let authRoleName = event.ResourceProperties.authRoleName;",
                "    let unauthRoleName = event.ResourceProperties.unauthRoleName;",
                "    let idpId = event.ResourceProperties.idpId;",
                "    let promises = [];",
                "    let getPromises = [];",
                "    let authParamsJson = { 'Version': '2012-10-17','Statement': [{'Effect': 'Allow','Principal': {'Federated': 'cognito-identity.amazonaws.com'},'Action': 'sts:AssumeRoleWithWebIdentity','Condition': {'StringEquals': {'cognito-identity.amazonaws.com:aud': idpId},'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'authenticated'}}}]};",
                "    let unauthParamsJson = { 'Version': '2012-10-17','Statement': [{'Effect': 'Allow','Principal': {'Federated': 'cognito-identity.amazonaws.com'},'Action': 'sts:AssumeRoleWithWebIdentity','Condition': {'StringEquals': {'cognito-identity.amazonaws.com:aud': idpId},'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'unauthenticated'}}}]};",
                "    if (event.RequestType == 'Delete') {",
                "        delete authParamsJson.Statement[0].Condition;",
                "        delete unauthParamsJson.Statement[0].Condition;",
                "        let authParams = { PolicyDocument: JSON.stringify(authParamsJson),RoleName: authRoleName};",
                "        let unauthParams = {PolicyDocument: JSON.stringify(unauthParamsJson),RoleName: unauthRoleName};",
                "        const iam = new aws.IAM({ apiVersion: '2010-05-08', region: event.ResourceProperties.region});",
                "        getPromises.push(iam.getRole({RoleName: authParams.RoleName}).promise());",
                "        getPromises.push(iam.getRole({RoleName: unauthParams.RoleName}).promise());",
                "        Promise.all(getPromises)",
                "         .then((res) => {",
                "        console.log('in res' , res)",
                "           promises.push(iam.updateAssumeRolePolicy(authParams).promise());",
                "           promises.push(iam.updateAssumeRolePolicy(unauthParams).promise());",
                "           return Promise.all(promises)",
                "             .then((res) => {",
                "               console.log(\"delete response data\" + JSON.stringify(res));",
                "               response.send(event, context, response.SUCCESS, {});",
                "             });",
                "          })",
                "           .catch((err) => {",
                "             console.log(err.stack);",
                "             responseData = {Error: err};",
                "             response.send(event, context, response.SUCCESS, responseData);",
                "             })",
                "    }",
                "    if (event.RequestType == 'Update' || event.RequestType == 'Create') {",
                "       const iam = new aws.IAM({ apiVersion: '2010-05-08', region: event.ResourceProperties.region});",
                "        let authParams = { PolicyDocument: JSON.stringify(authParamsJson),RoleName: authRoleName};",
                "        let unauthParams = {PolicyDocument: JSON.stringify(unauthParamsJson),RoleName: unauthRoleName};",
                "        promises.push(iam.updateAssumeRolePolicy(authParams).promise());",
                "        promises.push(iam.updateAssumeRolePolicy(unauthParams).promise());",
                "        Promise.all(promises)",
                "         .then((res) => {",
                "            console.log(\"createORupdate\" + res);",
                "            console.log(\"response data\" + JSON.stringify(res));",
                "            response.send(event, context, response.SUCCESS, {});",
                "         });",
                "    }",
                "  } catch(err) {",
                "       console.log(err.stack);",
                "       responseData = {Error: err};",
                "       response.send(event, context, response.FAILED, responseData);",
                "       throw err;",
                "  }",
                "};"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 300,
        "Role": {
          "Fn::GetAtt": [
            "UpdateRolesWithIDPFunctionRole",
            "Arn"
          ]
        }
      }
    },
    "UpdateRolesWithIDPFunctionOutputs": {
      "Type": "Custom::LambdaCallout",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "UpdateRolesWithIDPFunction",
            "Arn"
          ]
        },
        "region": {
          "Ref": "AWS::Region"
        },
        "idpId": {
          "Fn::GetAtt": [
            "authamplifyppetest1",
            "Outputs.IdentityPoolId"
          ]
        },
        "authRoleName": {
          "Ref": "AuthRole"
        },
        "unauthRoleName": {
          "Ref": "UnauthRole"
        }
      }
    },
    "UpdateRolesWithIDPFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AuthRole"
              },
              "-idp"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "UpdateRolesWithIDPFunctionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:UpdateAssumeRolePolicy",
                    "iam:GetRole"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "AuthRole",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:UpdateAssumeRolePolicy",
                    "iam:GetRole"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "UnauthRole",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  }
}